#include<../lib/constBuf.shader>
#include<../lib/io.shader>
#include<../lib/constants.shader>
cbuffer params:register(b0){float sx,sy,sz;};float3 rotX(float3 f,float s){float3x3 c={1,0,0,0,cos(s),-sin(s),0,sin(s),cos(s)};return mul(f,c);}float3 rotY(float3 s,float f){float3x3 c={cos(f),0,sin(f),0,1,0,-sin(f),0,cos(f)};return mul(s,c);}float3 rotZ(float3 f,float s){float3x3 c={cos(s),-sin(s),0,sin(s),cos(s),0,0,0,1};return mul(f,c);}float calcWalls(float2 s){float c=0;float2 f=float2(0,0);for(int x=0;x<5;x++){float2 c=s-.5-.5*float2(sin(x*4.+time.x*.01),.5*sin(x*5.+time.x*.012));c=float2(atan2(c.y,c.x)*2,2/(length(c)-.1)+time.y*.1);f+=c*2;}return pow(1-abs(sin(f.x))*abs(sin(f.y/13)),9)*2;}float3 getTpos(float2 f,float s,float c,float P){return float3((s+cos(f.x*P))*cos(f.x*c),(s+cos(f.x*P))*sin(f.x*c),sin(f.x*P));}float3 torusKnot(float2 f){float c=1.5,x=.24,s=1,P=3;float3 t=getTpos(f,c,s,P),y=t-getTpos(f+float2(.01,0),c,s,P),r=t+y,z=cross(y,r);r=cross(z,y);z=normalize(z);r=normalize(r);return t+x*(cos(f.y)*r+sin(f.y)*z);}float3 sphere(float2 f){f=frac(f);float2 s=f*PI*2;s.x*=-1;float3 c=float3(sin(s.x),sin(s.y/2),cos(s.x));c.xz*=cos(s.y/2);c*=.35;float x=pow(calcWalls(sin(f*PI*float2(4,3))),.01);c*=x*.6+2;f=abs(f-.5);c=c/(1+.4*(sin(f.x*PI*2*2)*cos(f.y*PI*4+time.y*.01)))*1.8;c.y*=.5;c.y-=.1*sin(length(c.xz)*8+time.x*.1);c.xyz=torusKnot(s);float3 t=torusKnot(s+float2(-.01,0)),r=torusKnot(s+float2(.01,0)),e=torusKnot(s+float2(0.,-.01)),z=torusKnot(s+float2(0.,.01)),y=normalize(r-t.xyz);r=normalize(z-e.xyz);t=cross(y,r);x=sin(s.x*PI*4096/2)+sin(s.y*PI*256/2);t=t*x*.45+t*.1+(y+r/5)*x;c+=t*.7;c+=x*float3(sin(c.x*214),sin(c.y*212),sin(c.z*122))*.05;return rotY(c,time.x*.01);}float4 PS(VS_OUTPUT f):SV_Target{float2 s=f.uv-.5;float3 c=sphere(s)*2;return float4(c,1.);}