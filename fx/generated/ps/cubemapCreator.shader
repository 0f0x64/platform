#include<../lib/constBuf.shader>
#include<../lib/io.shader>
#include<../lib/constants.shader>
struct PS_OUTPUT{float4 c0:SV_Target0;float4 c1:SV_Target1;float4 c2:SV_Target2;float4 c3:SV_Target3;float4 c4:SV_Target4;float4 c5:SV_Target5;};static const float3 offsetV[6]={float3(1,1,1),float3(-1,1,-1),float3(-1,1,-1),float3(-1,-1,1),float3(-1,1,1),float3(1,1,-1)},offsetX[6]={float3(0,0,-2),float3(0,0,2),float3(2,0,0),float3(2,0,0),float3(2,0,0),float3(-2,0,0)},offsetY[6]={float3(0,-2,0),float3(0,-2,0),float3(0,0,2),float3(0,0,-2),float3(0,-2,0),float3(0,-2,0)};float3 ConvertUV(float2 c,int x){float3 C=offsetV[x]+offsetX[x]*c.x+offsetY[x]*c.y;return normalize(C);}float calcWalls(float2 f){float c=0;float2 C=float2(0,0);for(int s=0;s<5;s++){float2 x=f-.5-.15*float2(sin(s*4.+time.x*.01),sin(s*5.+time.x*.02)),e=float2(atan2(x.y,x.x),12/(length(x)+.1)+time.y*.1);c+=pow(saturate(1-2*length(x)),62)*120;C+=e;}c+=pow(saturate(1-abs(sin(C.x))*abs(sin(C.y/13))),5)*2;return c*saturate(1-2*length(f-.5));}float4 env(float3 f){float c=.9*saturate(1244*sin(f.z/f.y*6)*sin(f.x/f.y*6)),x=saturate(8-pow(length(f.xz/f.y),.7)),C=atan2(f.z,f.x),s=frac(C/PI/2*64),y=frac(f.y*10.+.5);C=saturate(1-2*length(float2(s,y)-.5));c=lerp(c,C,1-x);c=pow(c,24)*10;c*=saturate(-f.y);c+=saturate(1-2*length(f.xz))*saturate(f.y)*44;return float4(c,c,c,1);}PS_OUTPUT PS(VS_OUTPUT f){float2 c=f.uv;float4 C=1;PS_OUTPUT e;e.c0=env(ConvertUV(c,0));e.c1=env(ConvertUV(c,1));e.c2=env(ConvertUV(c,2));e.c3=env(ConvertUV(c,3));e.c4=env(ConvertUV(c,4));e.c5=env(ConvertUV(c,5));return e;}